{"version":3,"sources":["components/Titlebar.js","App.js","index.js"],"names":["Titlebar","react_default","a","createElement","reactstrap_es","color","fixed","expand","className","href","App","onDrop","acceptedFiles","rejectedFiles","forEach","img","formdata","FormData","append","fetch","method","body","then","res","json","data","console","log","es","this","multiple","_ref","getRootProps","getInputProps","isDragActive","Object","assign","classNames","dropzone--isActive","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"yQAGeA,EAAA,kBACbC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAM,MAAMC,OAAO,KAAKC,UAAU,YACrDP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaK,KAAK,KAChBR,EAAAC,EAAAC,cAAA,qDCuCSO,oNAtCbC,OAAS,SAACC,EAAeC,GAEvBD,EAAcE,QAAQ,SAAAC,GACpB,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQH,GACxBI,MAAM,+BAAgC,CAACC,OAAQ,OAAQC,KAAKL,IACzDM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIC,QAAQC,IAAIF,gFAM9B,OACExB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAUjB,OAAQkB,KAAKlB,OAAQmB,UAAQ,GACpC,SAAAC,GAAiD,IAA/CC,EAA+CD,EAA/CC,aAAcC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,aAC9B,OACEjC,EAAAC,EAAAC,cAAA,MAAAgC,OAAAC,OAAA,GACMJ,IADN,CAEExB,UAAW6B,IAAW,WAAY,CAACC,qBAAsBJ,MAEzDjC,EAAAC,EAAAC,cAAA,QAAW8B,KAETC,EACEjC,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,wGA5BFoC,cCDlBC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a2e2d825.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\n\nexport default () => (\n  <Navbar color=\"dark\" fixed=\"top\" expand=\"lg\" className=\"titlebar\">\n    <NavbarBrand href=\"/\">\n      <h1>Korektor LJK</h1>\n    </NavbarBrand>  \n  </Navbar>\n);","import React, { Component } from 'react';\nimport Titlebar from './components/Titlebar';\nimport Dropzone from 'react-dropzone';\nimport classNames from 'classnames';\nimport './App.css';\n\nclass App extends Component {\n  onDrop = (acceptedFiles, rejectedFiles) => {\n    // Each file calls the endpoint asynchronously?\n    acceptedFiles.forEach(img => {\n      let formdata = new FormData()\n      formdata.append(\"file\", img)\n      fetch('http://localhost:5000/result', {method: 'POST', body:formdata})\n        .then(res => res.json())\n        .then(data => console.log(data))\n        // data is the result \n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Titlebar/>\n        <Dropzone onDrop={this.onDrop} multiple>\n          {({getRootProps, getInputProps, isDragActive}) => {\n            return (\n              <div\n                {...getRootProps()}\n                className={classNames('dropzone', {'dropzone--isActive': isDragActive})}\n              >\n                <input {...getInputProps()} />\n                {\n                  isDragActive ?\n                    <p>Drop!</p> :\n                    <p>Drag file-file gambar ke sini atau klik kotak ini untuk mengupload gambar LJK...</p>\n                }\n              </div>\n            )\n          }}\n        </Dropzone>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}